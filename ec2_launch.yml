- name: Configure and launch ec2 instances
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    desired_instances: 2

  tasks:
    - name: Create Security Group with SSH, HTTP protocol
      ec2_group:
        name: Ansible
        description: Ansible Security Group
        region: us-east-1
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0

          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0

    - name: Get ec2 instances info
      ec2_instance_info:
        filters:
          "tag:Name": Ansible
          instance-state-name: running
        region: us-east-1
      register: ec2_info

    - name: Set facts
      set_fact: 
        instance_to_launch: "{{ [0, desired_instances - ( ec2_info.instances | length )] | max }}"

    - name: Launch desired number of ec2 instances
      ec2_instance:
        name: Ansible
        instance_type: t2.micro
        security_group: Ansible
        image_id: ami-0360c520857e3138f
        key_name: Ansible_key
        region: us-east-1
        wait: true
        count: "{{ instance_to_launch }}"
      register: ec2

    - name: Refresh Inventory
      meta: refresh_inventory

- name: Make ssh connection with instances
  hosts: tag_Name_Ansible
  gather_facts: false

  tasks:
    - name: wait for ssh to online
      wait_for_connection:
        delay: 10
        timeout: 300

      vars:
        ansible_ssh_private_key_file: ./Ansible_key.pem
        ansible_user: ubuntu

- name: Install and start nginx
  hosts: tag_Name_Ansible
  gather_facts: false

  tasks:
    - name: install nginx in ec2_instance
      package: 
        name: nginx
        state: present
        update_cache: yes

    - name: Start nginx in ec2_instances
      service:
        name: nginx
        state: restarted

-
  hosts: tag_Name_Ansible

  tasks:
    - debug:
        msg: "Check http://{{ ansible_host }}"

- name: Terminate All EC2 instances
  hosts: tag_Name_Ansible
  
  tasks:
    - name: Terminate ec2 instances
      ec2_instance:
        state: absent
        instance_ids: "{{ instance_id }}"
        region: us-east-1
        wait: true
      delegate_to: localhost

- name: Remove Security groups in aws
  hosts: localhost
  gather_facts: false

  tasks:
    - name:
      ec2_group:
         name: Ansible
         region: us-east-1
         state: absent
      register: result
      until: result is success
      retries: 20
      delay: 10

      